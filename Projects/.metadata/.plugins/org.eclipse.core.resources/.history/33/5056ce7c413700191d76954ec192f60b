/*
 * EntityMgr.cpp
 *
 *  Created on: Feb 22, 2019
 *      Author: orion996
 */
#include "EntityMgr.h"

EntityMgr::EntityMgr()
{
	//do nothing
}

EntityMgr::EntityMgr(Ogre::SceneManager* mgr)
{
	mScnMgr = mgr;
}

EntityMgr::~EntityMgr()
{
	//do nothing
}

void EntityMgr::Tick(float dt)
{
	for(int i=0 ; i<entities.size() ; i++)
	{
		entities.at(i)->Tick(dt);
	}
}

void EntityMgr::createScene()
{
	for(int i=0 ; i<5 ; i++)
		createEntity(true, "cube" + i, Ogre::Vector3(i*250, 0, 0));

	for(int i=0 ; i<5 ; i++)
		createEntity(false, "sphere" + i, Ogre::Vector3(i*250, 0, 250));

}

void EntityMgr::createEntity(bool obj, std::string name, Ogre::Vector3 pos)
{
	Entity381* newEnt = new Entity381(mScnMgr, obj, name, pos);

	entities.push_back(newEnt);

	if(entities.size() == 1)
	{
		Renderable *temp = (Renderable*) entities[mIndex]->getAspect(mIndex);
		temp->showBox(true);
	}
}

void EntityMgr::destroyEntity()
{
	//do nothing
}

Entity381* EntityMgr::getEntity()
{
	return entities[mIndex];
}

void EntityMgr::enumerateIndex()
{
//	Renderable *og = (Renderable*) entities[mIndex]->getAspect(mIndex);
//	og->showBox(false);

	mIndex++;
	if(mIndex == mMaxItems)
		mIndex = 0;

	Renderable *temp = (Renderable*) entities[mIndex]->getAspect(0);
	temp->showBox(true);
}
